# Docker Environment Configuration

# Production Environment
version: '3.8'

services:
  api-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: desafio-isi-backend-prod
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_TYPE=sqlite
      - DB_DATABASE=/app/data/database.sqlite
      - DB_SYNCHRONIZE=false
      - DB_LOGGING=false
      - API_PREFIX=api/v1
      - CORS_ENABLED=true
    volumes:
      - prod_data:/app/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/v1/products"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    networks:
      - prod-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: desafio-isi-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-prod
    restart: always
    networks:
      - prod-network

networks:
  prod-network:
    driver: bridge

volumes:
  prod_data:
    driver: local
